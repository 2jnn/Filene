import java.util.ArrayList;

class Playlist {
    private String name;
    private ArrayList<String> tracks;

    public Playlist(String name) {
        this.name = name;
        this.tracks = new ArrayList<>();
    }

    public String getName() {
        return name;
    }

    public ArrayList<String> getTracks() {
        return tracks;
    }

    public void addTrack(String track) {
        if (!tracks.contains(track)) {
            tracks.add(track);
        }
    }

    public void removeTrack(String track) {
        tracks.remove(track);
    }

    public void displayTracks() {
        System.out.println("Playlist: " + name);
        for (String track : tracks) {
            System.out.println(" - " + track);
        }
    }
}

class MusicLibrary {
    private String libraryName;
    private String owner;
    private ArrayList<String> tracks;
    private ArrayList<Playlist> playlists;

    public MusicLibrary(String libraryName, String owner) {
        this.libraryName = libraryName;
        this.owner = owner;
        this.tracks = new ArrayList<>();
        this.playlists = new ArrayList<>();
    }

    public void addTrack(String track) {
        if (!tracks.contains(track)) {
            tracks.add(track);
            System.out.println("Added track: " + track);
        } else {
            System.out.println("Track already exists: " + track);
        }
    }

    public void removeTrack(String track) {
        if (tracks.remove(track)) {
            for (Playlist p : playlists) {
                p.removeTrack(track);
            }
            System.out.println("Removed track: " + track);
        } else {
            System.out.println("Track not found: " + track);
        }
    }

    public void displayTracks() {
        System.out.println("All Tracks in Library:");
        for (String track : tracks) {
            System.out.println(" - " + track);
        }
    }

    public void searchTracks(String phrase) {
        System.out.println("Search results for \"" + phrase + "\":");
        for (String track : tracks) {
            if (track.toLowerCase().contains(phrase.toLowerCase())) {
                System.out.println(" - " + track);
            }
        }
    }

    public void createPlaylist(String name) {
        if (findPlaylist(name) == null) {
            playlists.add(new Playlist(name));
            System.out.println("Created playlist: " + name);
        } else {
            System.out.println("Playlist already exists: " + name);
        }
    }

    public void addTrackToPlaylist(String track, String playlistName) {
        Playlist playlist = findPlaylist(playlistName);
        if (playlist != null) {
            if (tracks.contains(track)) {
                playlist.addTrack(track);
                System.out.println("Added track to playlist: " + track);
            } else {
                System.out.println("Track does not exist in the library.");
            }
        } else {
            System.out.println("Playlist not found: " + playlistName);
        }
    }

    private Playlist findPlaylist(String name) {
        for (Playlist p : playlists) {
            if (p.getName().equalsIgnoreCase(name)) {
                return p;
            }
        }
        return null;
    }

    public void displayPlaylist(String name) {
        Playlist p = findPlaylist(name);
        if (p != null) {
            p.displayTracks();
        } else {
            System.out.println("Playlist not found: " + name);
        }
    }

    public void displayAllPlaylists() {
        System.out.println("All Playlists:");
        for (Playlist p : playlists) {
            System.out.println(" - " + p.getName());
        }
    }

    public int getTrackCount() {
        return tracks.size();
    }

    public int getPlaylistCount() {
        return playlists.size();
    }
}

public class fedaninhw4 {
    public static void main(String[] args) {
        MusicLibrary myLibrary = new MusicLibrary("Rock Collection", "John Smith");

        myLibrary.addTrack("Led Zeppelin - Stairway to Heaven");
        myLibrary.addTrack("Queen - Bohemian Rhapsody");
        myLibrary.addTrack("Pink Floyd - Comfortably Numb");
        myLibrary.addTrack("AC/DC - Back in Black");
        myLibrary.addTrack("Metallica - Nothing Else Matters");

        myLibrary.displayTracks();

        myLibrary.createPlaylist("Favorites");
        myLibrary.createPlaylist("Party");

        myLibrary.addTrackToPlaylist("Queen - Bohemian Rhapsody", "Favorites");
        myLibrary.addTrackToPlaylist("Pink Floyd - Comfortably Numb", "Favorites");
        myLibrary.addTrackToPlaylist("AC/DC - Back in Black", "Party");
        myLibrary.addTrackToPlaylist("Metallica - Nothing Else Matters", "Party");

        myLibrary.displayAllPlaylists();
        myLibrary.displayPlaylist("Favorites");

        myLibrary.searchTracks("Queen");

        myLibrary.removeTrack("AC/DC - Back in Black");

        myLibrary.displayPlaylist("Party");

        System.out.println("Total number of tracks in the library: " + myLibrary.getTrackCount());
        System.out.println("Total number of playlists: " + myLibrary.getPlaylistCount());
    }
}